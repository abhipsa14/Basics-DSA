q. to return triplets whose sum is 0
Example 1:
Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]
Explanation: 
nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.
nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.
nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.
The distinct triplets are [-1,0,1] and [-1,-1,2].
Notice that the order of the output and the order of the triplets does not matter.


-->when index is asked we can't do sorting in that.
--->here we can sort the Input
-->remove duplicates
-->will use two pointer method...in which first we go from first and last pointer and check for the target element if achieved or not...
if duplicates encountered move forward and save the answer once...now once the two pointer cross eact other return the results of array.
---> n1, n2, n3-->this will give the three sum by using n2+n3=-(n1) 